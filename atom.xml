<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZJY Blog Share</title>
  
  <subtitle>一个深耕前端技术栈的前端码农，专注于js技术栈的前后端技术</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-21T14:02:50.141Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zjy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nodejs学习笔记(2)</title>
    <link href="http://yoursite.com/2020/01/20/Nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/"/>
    <id>http://yoursite.com/2020/01/20/Nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/</id>
    <published>2020-01-20T14:24:52.000Z</published>
    <updated>2020-01-21T14:02:50.141Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;console模块&quot;&gt;&lt;a href=&quot;#console模块&quot; class=&quot;headerlink&quot; title=&quot;console模块&quot;&gt;&lt;/a&gt;console模块&lt;/h3&gt;&lt;h4 id=&quot;日志都是默认打印到控制台。最常用的是console-log-、console-error-两个方法。&quot;&gt;&lt;a href=&quot;#日志都是默认打印到控制台。最常用的是console-log-、console-error-两个方法。&quot; class=&quot;headerlink&quot; title=&quot;日志都是默认打印到控制台。最常用的是console.log()、console.error()两个方法。&quot;&gt;&lt;/a&gt;日志都是默认打印到控制台。最常用的是console.log()、console.error()两个方法。&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;console.log(msg)：普通日志打印。&lt;/li&gt;
&lt;li&gt;console.error(msg)：错误日志打印。&lt;/li&gt;
&lt;li&gt;console.info(msg)：等同于console.log(msg)&lt;/li&gt;
&lt;li&gt;console.warn(msg)：等同于console.error(msg)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;console打印一些小技巧输出变量-定义name-‘jack’。&quot;&gt;&lt;a href=&quot;#console打印一些小技巧输出变量-定义name-‘jack’。&quot; class=&quot;headerlink&quot; title=&quot;console打印一些小技巧输出变量 定义name = ‘jack’。&quot;&gt;&lt;/a&gt;console打印一些小技巧输出变量 定义name = ‘jack’。&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;console.log(&lt;code&gt;你好${name}&lt;/code&gt; // 输出你好jack&lt;/li&gt;
&lt;li&gt;console.log(‘你好%s’，name) // 输出你好jack
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Nodejs学习笔记(1)</title>
    <link href="http://yoursite.com/2020/01/08/Nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://yoursite.com/2020/01/08/Nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</id>
    <published>2020-01-08T15:35:48.000Z</published>
    <updated>2020-01-10T15:34:34.853Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;聊一聊javaScript-的前世今生&quot;&gt;&lt;a href=&quot;#聊一聊javaScript-的前世今生&quot; class=&quot;headerlink&quot; title=&quot;聊一聊javaScript 的前世今生&quot;&gt;&lt;/a&gt;聊一聊javaScript 的前世今生&lt;/h3&gt;&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;我们如今看到前端技术蓬勃发展， 前端技术由单单浏览器的交互开发，开始引申到服务器，移动端，桌面端， 大前端的概念的愈发流行。 前端开发天花板不再存在， 能限制你的只是你能不能跟的上前端快速发展的技术。而前端开发也从过去的页面仔，切图仔慢慢也有了自己专属的名称：前端开发工程师，要知道在过去可是根本没有这个职位! 那是什么原因令JavaScript这门语言如今如火如荼， 那么我斗胆按自己个人理解聊聊JavaScript的前世今生。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>牛客网前端编程算法(1)</title>
    <link href="http://yoursite.com/2020/01/07/%E7%89%9B%E5%AE%A2%E7%BD%91%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E7%AE%97%E6%B3%95-1/"/>
    <id>http://yoursite.com/2020/01/07/%E7%89%9B%E5%AE%A2%E7%BD%91%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E7%AE%97%E6%B3%95-1/</id>
    <published>2020-01-07T12:34:10.000Z</published>
    <updated>2020-01-12T15:03:38.752Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这里收集网上其他博主以及牛客网的一些算法编程题，给出网上巧妙的算法以及加上自己的一些备注和自己的做法作为面试的题型的储备&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>手把手教你linux部署nginx</title>
    <link href="http://yoursite.com/2020/01/05/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0linux%E9%83%A8%E7%BD%B2nginx/"/>
    <id>http://yoursite.com/2020/01/05/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0linux%E9%83%A8%E7%BD%B2nginx/</id>
    <published>2020-01-05T13:59:39.000Z</published>
    <updated>2020-01-05T15:04:34.363Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;目前主流公司如果采取前后分离开发方案的情况，一般前端使用webpack打包会生成dist文件需要部署nginx静态服务器，在window下安装部署nginx十分简单，只需要安装完后丢到ngix安装目录下html目录下， 然后直接在conf文件下配置conf文件即可。然后打开localhost可以看到效果，那在linux是怎么部署呢？接下来我们在linux部署ngix&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>牛客网NodeJS输入输出流</title>
    <link href="http://yoursite.com/2020/01/05/%E7%89%9B%E5%AE%A2%E7%BD%91%E5%89%8D%E7%AB%AF%E5%88%B7%E9%A2%98%E9%94%A6%E5%9B%8A/"/>
    <id>http://yoursite.com/2020/01/05/%E7%89%9B%E5%AE%A2%E7%BD%91%E5%89%8D%E7%AB%AF%E5%88%B7%E9%A2%98%E9%94%A6%E5%9B%8A/</id>
    <published>2020-01-05T10:13:06.000Z</published>
    <updated>2020-01-07T12:33:24.450Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;相信小伙伴们面试各类公司除了传统笔试，更多面对是如牛客网这样网上在线编程笔试。但是由于牛客网对前端语言js支持不太友好，导致小伙伴们都不太清楚编程题如何输入输出答案(js解释性语言真不好做输出输入流，建议用nodejs吧，语法基本一样)&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>手把手教你撸Hexo博客(3)</title>
    <link href="http://yoursite.com/2020/01/05/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%92%B8Hexo%E5%8D%9A%E5%AE%A2-3/"/>
    <id>http://yoursite.com/2020/01/05/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%92%B8Hexo%E5%8D%9A%E5%AE%A2-3/</id>
    <published>2020-01-05T05:56:04.000Z</published>
    <updated>2020-01-06T15:40:35.465Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;那么既然主题跟换了， 那么我们要怎么编辑内容呢。这里我推荐一个编辑插件hexo-admin 。&lt;/p&gt;
&lt;p&gt;本地运行hexo使用hexo-admin编写文章，然后通过hexo g或hexo d（hexo g是本地渲染，hexo d是将渲染的静态页面发布到GitHub）将生成的静态页面发布到GitHub等静态服务器。（我采取这个方案）&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>手把手教你撸Hexo博客(2)</title>
    <link href="http://yoursite.com/2020/01/05/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%92%B8Hexo%E5%8D%9A%E5%AE%A2-2/"/>
    <id>http://yoursite.com/2020/01/05/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%92%B8Hexo%E5%8D%9A%E5%AE%A2-2/</id>
    <published>2020-01-05T03:51:18.000Z</published>
    <updated>2020-01-05T05:53:44.369Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;本次教程属主要集中对创建博客后，对hexo博客框架相关主题更换设置，话不多说，我们现在开始！&lt;/p&gt;
&lt;h3 id=&quot;下载主题&quot;&gt;&lt;a href=&quot;#下载主题&quot; class=&quot;headerlink&quot; title=&quot;下载主题&quot;&gt;&lt;/a&gt;下载主题&lt;/h3&gt;&lt;p&gt;首先我们可以进入&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;查找你觉得喜欢的主题， 这里我选择ayer主题。点击图片可以查看大概主题效果。然后我们点击文字进入GitHub插件地址。&lt;/p&gt;
&lt;p&gt;打开你项目所在文件目录， 进入themes文件夹。右键打开git bash&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>手把手教你撸Hexo博客(1)</title>
    <link href="http://yoursite.com/2020/01/02/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%92%B8Hexo%E5%8D%9A%E5%AE%A2-1/"/>
    <id>http://yoursite.com/2020/01/02/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%92%B8Hexo%E5%8D%9A%E5%AE%A2-1/</id>
    <published>2020-01-02T15:25:00.000Z</published>
    <updated>2020-01-06T15:42:52.607Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo简介&quot;&gt;&lt;a href=&quot;#Hexo简介&quot; class=&quot;headerlink&quot; title=&quot;Hexo简介&quot;&gt;&lt;/a&gt;Hexo简介&lt;/h2&gt;&lt;p&gt;作为前端技术栈，Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。另外该框架对中文支持十分友好， 大家有兴趣可以&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;了解下。&lt;/p&gt;
&lt;h3 id=&quot;Hexo搭建步骤&quot;&gt;&lt;a href=&quot;#Hexo搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;Hexo搭建步骤&quot;&gt;&lt;/a&gt;Hexo搭建步骤&lt;/h3&gt;&lt;h4 id=&quot;1-安装git&quot;&gt;&lt;a href=&quot;#1-安装git&quot; class=&quot;headerlink&quot; title=&quot;1.安装git&quot;&gt;&lt;/a&gt;1.安装git&lt;/h4&gt;&lt;p&gt;安装git用于部署代码上传博客静态文件。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://npm.taobao.org/mirrors/git-for-windows/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;git淘宝镜像&lt;/a&gt;， 下载速度快， window版本直接安装点击下一步完成安装即可。&lt;/p&gt;
&lt;p&gt;linux 安装， 安装完之后输入 git –version 返回版本安装成功。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
